name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]
  workflow_dispatch: # allows you to trigger manually

# When this workflow is queued, automatically cancel any previous running
# or pending jobs from the same branch
concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    name:
      ${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.requirements }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        requirements: [latest]
        include:
          # Test on macos and windows (first and last version of python only)
          - os: macos
            python-version: "3.10"
            requirements: latest
          - os: macos
            python-version: "3.13"
            requirements: latest
          - os: windows
            python-version: "3.10"
            requirements: latest
          - os: windows
            python-version: "3.13"
            requirements: latest
          # Test on minimal requirements, with Numba
          - os: ubuntu
            python-version: "3.10"
            requirements: minimal
          - os: macos
            python-version: "3.10"
            requirements: minimal
          - os: windows
            python-version: "3.10"
            requirements: minimal
          # Test on minimal requirements, without Numba
          - os: ubuntu
            python-version: "3.10"
            requirements: minimal-no-numba
          - os: macos
            python-version: "3.10"
            requirements: minimal-no-numba
          - os: windows
            python-version: "3.10"
            requirements: minimal-no-numba

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: ci/requirements-${{ matrix.requirements }}.yml
          activate-environment: pyscenarios

      - name: Show conda options
        run: conda config --show

      - name: conda info
        run: conda info

      - name: conda list
        run: conda list

      - name: Install
        run: python -m pip install --no-deps -e .

      - name: pytest
        run: pytest --verbose --cov=pyscenarios --cov-report=xml

      - name: codecov.io
        uses: codecov/codecov-action@v5
