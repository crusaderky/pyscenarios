# Based on http://conda.pydata.org/docs/travis.html
language: python
sudo: false # use container based build
notifications:
  email: false

matrix:
  fast_finish: true
  include:
  - env: CONDA_ENV=py38 LINT=1
  - env: CONDA_ENV=minimal PYTEST=1
  - env: CONDA_ENV=py36 PYTEST=1
  - env: CONDA_ENV=py37 PYTEST=1
  - env: CONDA_ENV=py38 PYTEST=1
  - env: CONDA_ENV=py38 PYTEST=1 NUMBA_DISABLE_JIT=1  # coveralls for @jit-compiled functions
  - env: CONDA_ENV=docs SPHINX=1

before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
  - conda update -q conda
  - conda info -a

install:
  - conda env create -n test_env --file ci/requirements-$CONDA_ENV.yml
  - source activate test_env
  - conda list
  - python -m pip install --no-deps -e .

script:
  - python -c "import pyscenarios"
  - if [[ -n "$LINT" ]]; then flake8; fi
  - if [[ -n "$LINT" ]]; then mypy .; fi
  - if [[ -n "$LINT" ]]; then isort -rc --check .; fi
  - if [[ -n "$LINT" ]]; then black -t py36 --check .; fi
  - if [[ -n "$PYTEST" ]]; then
      pytest -v pyscenarios --cov=pyscenarios --cov-config ci/.coveragerc --cov-report term-missing; fi
  - if [[ -n "$SPHINX" ]]; then
      sphinx-build -n -j auto -b html -d _build/doctrees doc _build/html; fi

after_success:
  - coveralls
